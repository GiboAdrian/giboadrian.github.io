{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/user-edit.component.ts","webpack:///src/app/views/user-edit.html","webpack:///src/app/models/user.ts","webpack:///src/app/services/global.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_userService","title","user","user_register","url","identity","getIdentity","token","getToken","console","log","signup","subscribe","response","respuesta","hola","_id","alert","localStorage","setItem","JSON","stringify","respuesta2","length","error","errorMessage","message","removeItem","clear","register","alertRegister","email","selector","templateUrl","providers","AppModule","declarations","imports","bootstrap","appRoutes","path","component","AppRoutingModule","forRoot","UserEditComponent","titulo","updateUser","alertMessage","document","getElementById","innerHTML","name","filesToUpload","makeFileRequest","result","image","image_path","setAttribute","fileInput","target","files","params","reject","formData","FormData","xhr","XMLHttpRequest","i","append","onreadystatechange","readyState","status","parse","open","setRequestHeader","send","onSubmit","fileChangeEvent","User","surname","password","role","GLOBAL","UserService","_http","user_to_login","gethash","json","headers","post","user_to_register","user_to_update","put","getItem","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { GLOBAL } from './services/global';\nimport { UserService } from './services/user.service';\nimport { User } from './models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [UserService]\n})\nexport class AppComponent implements OnInit{\n  public title = 'Gibbyfy';\n  public user: User;\n  public user_register: User;\n  public identity;\n  public token;\n  public errorMessage;\n  public alertRegister;\n  public url: string;\n\n  constructor(\n  \tprivate _userService:UserService\n  ){\n  \tthis.user = new User('', '', '', '', '', 'ROLE_USER', '');\n  \tthis.user_register = new User('', '', '', '', '', 'ROLE_USER', '');\n  \tthis.url = GLOBAL.url;\n  }\n\n  ngOnInit(){\n  \tthis.identity = this._userService.getIdentity();\n  \tthis.token = this._userService.getToken();\n\n  \tconsole.log(this.identity);\n  \tconsole.log(this.token);\n  }\n\n  public onSubmit(){\n  \tconsole.log(this.user);\n\n  \t//conseguir los datos del usuario identificado\n  \tthis._userService.signup(this.user).subscribe(\n  \t\tresponse => {\n\n  \t\t\tvar respuesta: any = response;\n        \tthis.identity = respuesta.hola;\n\n        \tif (!this.identity._id) {\n          \t\talert('El usuario no esta correctamente logueado.');\n        \t} else {\n        \t\t//Crear elemento en el local storage para tener al usuario en sesión\n        \t\tlocalStorage.setItem('identity', JSON.stringify(this.identity));\n\n        \t\t//Conseguir el token para enviarselo a cada peticion HTTP\n        \t\tthis._userService.signup(this.user, 'true').subscribe(\n        \t\t\tresponse => {\n        \t\t\t\tvar respuesta2: any = response;\n        \t\t\t\tthis.token = respuesta2.token;\n\n        \t\t\t\tif(this.token.length <= 0){\n        \t\t\t\t\talert('El token no se ha generado');\n        \t\t\t\t}else{\n        \t\t\t\t\t//Crear elemento en el local storage para tener token disponible\n        \t\t\t\t\tlocalStorage.setItem('token', this.token);\n        \t\t\t\t\tthis.user = new User('', '', '', '', '', 'ROLE_USER', '');\n        \t\t\t\t}\n        \t\t\t},\n        \t\t\terror => {\n\n        \t\t\t}\n        \t\t);\n        \t}\n  \t\t},\n  \t\terror => {\n  \t\t\tvar errorMessage = <any> error;\n\n  \t\t\tif(errorMessage != null){\n  \t\t\t\tthis.errorMessage = errorMessage.error.message;\n  \t\t\t\tconsole.log(error);\n  \t\t\t\tconsole.log(errorMessage);\n  \t\t\t\tconsole.log(this.errorMessage);\n  \t\t\t}\n  \t\t}\n  \t);\n  }\n\n  logout(){\n  \tlocalStorage.removeItem('identity');\n  \tlocalStorage.removeItem('token');\n  \tlocalStorage.clear();\n  \tthis.identity = null;\n  \tthis.token = null;\n  }\n\n  onSubmitRegister(){\n  \tconsole.log(this.user_register);\n\n  \tthis._userService.register(this.user_register).subscribe(\n  \t\tresponse => {\n  \t\t\tvar respuesta: any = response;\n        \tthis.user_register = respuesta.user;\n\n  \t\t\tif(!this.user_register._id){\n  \t\t\t\tthis.alertRegister = 'Error al registrarse';\n  \t\t\t}else{\n  \t\t\t\tthis.alertRegister = 'El registro se ha realizado correctamente, identificate con '+this.user_register.email;\n  \t\t\t\tthis.user_register = new User('', '', '', '', '', 'ROLE_USER', '');\n  \t\t\t}\n  \t\t},\n  \t\terror => {\n  \t\t\tvar errorMessage = <any> error;\n\n  \t\t\tif(errorMessage != null){\n  \t\t\tthis.alertRegister = errorMessage.error.message;\n  \t\t\t//\tconsole.log(error);\n  \t\t\t//\tconsole.log(errorMessage);\n  \t\t\t//\tconsole.log(this.errorMessage);\n  \t\t\t}\n  \t\t}\n  \t);  \t\t\n  }\n}\n","<div *ngIf=\"identity\" class=\"navigation col-lg-1\">\n  <h1 class=\"head-title\">\n    <a [routerLink]=\"['/']\">\n      <span class=\"glyphicon glyphicon-music\" aria-hidden=\"true\"></span>\n      {{title}}\n    </a>\n  </h1>\n  <nav id=\"navigation\">\n    <a href=\"#\">\n      <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n      Buscar\n    </a>\n    <a href=\"#\">\n      <span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span>\n      Artistas\n    </a>\n    <a href=\"#\">\n      <span class=\"glyphicon glyphicon-book\" aria-hidden=\"true\"></span>\n      Albums\n    </a>  \n    \n  </nav>\n\n  <nav id=\"user_logged\">\n    <div class=\"user-image\">\n      <img id=\"image-logged\" src=\"{{url +'get-image-user/' + identity.image}}\"/>\n    </div>\n\n    <span id=\"identity_name\">\n      {{identity.name}}\n    </span>\n    <a [routerLink]=\"['/mis-datos']\">\n      <span class=\"glyphicon glyphicon-cog\" aria-hidden=\"true\"></span>\n      Mis datos\n    </a>\n    <a (click)=\"logout()\" class=\"btn-logout\">\n      <span class=\"glyphicon glyphicon-log-out\" aria-hidden=\"true\"></span>\n      Salir\n    </a>\n  </nav>\n</div>\n\n<div *ngIf=\"identity\" class=\"central col-lg-11\">\n  <router-outlet></router-outlet>\n</div>\n\n<div class=\"col-lg-11\" *ngIf=\"!identity\">\n  <div class=\"col-lg-6\">\n    <h1>Identifícate</h1>\n    <div *ngIf=\"errorMessage\">\n      <div class=\"alert alert-info\">\n        <strong>Error</strong> {{ errorMessage }}\n      </div>\n    </div>\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"col-md-7\">\n      <p>\n        <label>Correo electrónico: </label>\n        <input type=\"email\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"user.email\" class=\"form-control\" required />\n        <span *ngIf=\"!email.valid && email.touched\">\n          El email es obligatorio\n        </span>\n      </p>\n\n      <p>\n        <label>Contraseña: </label>\n        <input type=\"password\" #password=\"ngModel\" name=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\" required/>\n      </p>\n\n      <input type=\"submit\" value=\"Entrar\" class=\"btn btn-primary\" />\n    </form>\n  </div>\n\n  <div class=\"col-lg-6\">\n    <h1>Regístrate</h1>\n    <div *ngIf=\"alertRegister\">\n      <div class=\"alert alert-info\">\n        {{ alertRegister }}\n      </div>\n    </div>\n    <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmitRegister()\" class=\"col-md-10\">\n      <p>\n        <label>Nombre: </label>\n        <input type=\"text\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"user_register.name\" class=\"form-control\" required />\n        <span *ngIf=\"!name.valid && name.touched\">\n          El nombre es obligatorio\n        </span>\n      </p>\n\n      <p>\n        <label>Apellidos: </label>\n        <input type=\"text\" #surname=\"ngModel\" name=\"surname\" [(ngModel)]=\"user_register.surname\" class=\"form-control\" required />\n        <span *ngIf=\"!surname.valid && surname.touched\">\n          El apellido es obligatorio\n        </span>\n      </p>\n\n      <p>\n        <label>Correo electrónico: </label>\n        <input type=\"email\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"user_register.email\"  class=\"form-control\" required />\n        <span *ngIf=\"!email.valid && email.touched\">\n          El email es obligatorio\n        </span>\n      </p>\n\n      <p>\n        <label>Contraseña: </label>\n        <input type=\"password\" #password=\"ngModel\" name=\"password\" [(ngModel)]=\"user_register.password\" class=\"form-control\" required />\n        <span *ngIf=\"!password.valid && password.touched\">\n          La contraseña es obligatoria\n        </span>\n      </p>\n\n      <input type=\"submit\" value=\"Registrarse\" class=\"btn btn-primary\" />\n\n    </form>\n  </div>\n</div>\n\n\n\n\n    \n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule  } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { UserEditComponent } from './components/user-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AppRoutingModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//import UserEditComponent\nimport { UserEditComponent } from './components/user-edit.component';\n\nconst appRoutes: Routes = [\n\t{path: '', component: UserEditComponent},\n\t{path: 'mis-datos', component: UserEditComponent},\n\t{path: '**', component: UserEditComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GLOBAL } from '../services/global';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../models/user';\r\n\r\n@Component({\r\n\tselector: 'user-edit',\r\n\ttemplateUrl: '../views/user-edit.html',\r\n\tproviders: [UserService]\r\n})\r\n\r\nexport class UserEditComponent implements OnInit{\r\n\tpublic titulo: string;\r\n\tpublic user: User;\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic alertMessage;\r\n\tpublic url: string;\r\n\r\n\tconstructor(\r\n\t\tprivate _userService: UserService\r\n\t){\r\n\t\tthis.titulo = 'Actualizar mis datos';\r\n\t\tthis.identity = this._userService.getIdentity();\r\n  \t\tthis.token = this._userService.getToken();\r\n  \t\tthis.user = this.identity;\r\n  \t\tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tconsole.log('user-edit.component.ts cargado');\r\n\t}\r\n\r\n\tonSubmit(){\r\n\t\tconsole.log(this.user);\r\n\r\n\t\tthis._userService.updateUser(this.user).subscribe(\r\n\t\t\tresponse => {\r\n\r\n\t\t\t\tvar respuesta: any = response;\r\n\r\n\t\t\t\tif(!respuesta.user){\r\n\t\t\t\t\tthis.alertMessage = 'El usuario no se ha actualizado';\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\t//this.user = respuesta.user;\r\n\t\t\t\t\tlocalStorage.setItem('identity', JSON.stringify(this.user));\r\n\t\t\t\t\tdocument.getElementById(\"identity_name\").innerHTML = this.user.name;\r\n\r\n\t\t\t\t\tif(!this.filesToUpload){\r\n\t\t\t\t\t\t//Redireccion\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.makeFileRequest(this.url+'upload-image-user/'+this.user._id, [], this.filesToUpload).then(\r\n\t\t\t\t\t\t\t(result: any) => {\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t\tconsole.log(result.user);\r\n\t\t\t\t\t\t\t\tconsole.log(result.image);\r\n\t\t\t\t\t\t\t\tconsole.log(result.user.image);\r\n\t\t\t\t\t\t\t\tthis.user.image = result.image;\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('identity', JSON.stringify(this.user));\r\n\r\n\t\t\t\t\t\t\t\tlet image_path = this.url+'get-image-user/'+this.user.image;\r\n\t\t\t\t\t\t\t\tdocument.getElementById('image-logged').setAttribute('src', image_path);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.alertMessage = 'El usuario se ha actualizado correctamente';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tvar errorMessage = <any> error;\r\n\r\n\t\t\t\tif(errorMessage != null){\r\n  \t\t\t\t\tthis.alertMessage = errorMessage.error.message;\r\n  \t\t\t\t\tconsole.log(this.alertMessage);\r\n  \t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic filesToUpload: Array<File>;\r\n\r\n\tfileChangeEvent(fileInput: any){\r\n\t\tthis.filesToUpload = <Array<File>>fileInput.target.files;\r\n\t}\r\n\r\n\tmakeFileRequest(url: string, params: Array<string>, files: Array<File>){\r\n\t\tvar token = this.token;\r\n\r\n\t\treturn new Promise(function(resolve, reject){\r\n\t\t\tvar formData: any = new FormData();\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\r\n\t\t\tfor(var i = 0; i < files.length; i++){\r\n\t\t\t\tformData.append('image', files[i], files[i].name);\r\n\t\t\t}\r\n\r\n\t\t\txhr.onreadystatechange = function (){\r\n\t\t\t\tif(xhr.readyState == 4){\r\n\t\t\t\t\tif(xhr.status == 200){\r\n\t\t\t\t\t\tresolve(JSON.parse(xhr.response));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treject(xhr.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txhr.open('POST', url, true);\r\n\t\t\txhr.setRequestHeader('Authorization', token);\r\n\t\t\txhr.send(formData);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n","<div class=\"col-lg-6\">\r\n\t\t<h1>{{titulo}}</h1>\r\n\r\n\t\t<div *ngIf=\"alertMessage\">\r\n\t\t\t<div class=\"alert alert-info\">\r\n\t\t\t  {{ alertMessage }}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<form #userUpdateForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"col-md-10\">\r\n\t\t\t<p>\r\n\t\t\t\t<label>Nombre: </label>\r\n\t\t\t\t<input type=\"text\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"user.name\" class=\"form-control\" required />\r\n\t\t\t\t<span *ngIf=\"!name.valid && name.touched\">\r\n\t\t\t\t\tEl nombre es obligatorio\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<label>Apellidos: </label>\r\n\t\t\t\t<input type=\"text\" #surname=\"ngModel\" name=\"surname\" [(ngModel)]=\"user.surname\" class=\"form-control\" required />\r\n\t\t\t\t<span *ngIf=\"!surname.valid && surname.touched\">\r\n\t\t\t\t\tEl apellido es obligatorio\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<label>Correo electrónico: </label>\r\n\t\t\t\t<input type=\"email\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"user.email\"  class=\"form-control\" required />\r\n\t\t\t\t<span *ngIf=\"!email.valid && email.touched\">\r\n\t\t\t\t\tEl email es obligatorio\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\r\n\t\t\t<div class=\"image_for_edit\" *ngIf=\"user.image && user.image != 'null'\">\r\n\t\t\t\t<img src=\"{{url +'get-image-user/' + user.image}}\" style=\"width: 50px;\"/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p>\r\n\t\t\t\t<label>Sube tu foto: </label>\r\n\t\t\t\t<input type=\"file\" placeholder=\"Subir imagen...\" (change)=\"fileChangeEvent($event)\" />\r\n\t\t\t</p>\r\n\r\n\t\t\t<input type=\"submit\" value=\"Actualizar mis datos\" class=\"btn btn-primary\" />\r\n\r\n\t\t</form>\r\n\t</div>","export class User{\r\n\tconstructor(\r\n\t\tpublic _id: string,\r\n\t\tpublic name: string,\r\n\t\tpublic surname: string,\r\n\t\tpublic email: string,\r\n\t\tpublic password: string,\r\n\t\tpublic role: string,\r\n\t\tpublic image: string\r\n\t){}\r\n}","export var GLOBAL = {\r\n\turl: 'https://gibbyfy.herokuapp.com/api/'\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GLOBAL } from './global';\r\n\r\n@Injectable()\r\nexport class UserService{\r\n\tpublic identity;\r\n\tpublic token;\r\n\tpublic url: string;\r\n\r\n\tconstructor(private _http: HttpClient){\r\n\t\tthis.url = GLOBAL.url;\r\n\t}\r\n\r\n\tsignup(user_to_login, gethash = null){\r\n\t\tif(gethash != null){\r\n\t\t\tuser_to_login.gethash = gethash;\r\n\t\t}\r\n\t\tlet json = JSON.stringify(user_to_login);\r\n\t\tlet params = json;\r\n\r\n\t\tlet headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\r\n\t\treturn this._http.post(this.url+'login', params, {headers: headers});\r\n\t}\r\n\r\n\tregister(user_to_register){\r\n\t\tlet json = JSON.stringify(user_to_register);\r\n\t\tlet params = json;\r\n\r\n\t\tlet headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\r\n\t\treturn this._http.post(this.url+'register', params, {headers: headers});\r\n\t}\r\n\r\n\tupdateUser(user_to_update){\r\n\t\tlet json = JSON.stringify(user_to_update);\r\n\t\tlet params = json;\r\n\r\n\t\tlet headers = new HttpHeaders({\r\n\t\t\t'Content-Type':'application/json',\r\n\t\t\t'Authorization':this.getToken()\r\n\t\t});\r\n\r\n\t\treturn this._http.put(this.url+'update-user/'+user_to_update._id, params, {headers: headers});\r\n\t}\r\n\r\n\tgetIdentity(){\r\n\t\tlet identity = JSON.parse(localStorage.getItem('identity'));\r\n\r\n\t\tif(identity != \"undefined\"){\r\n\t\t\tthis.identity = identity;\r\n\t\t}else{\r\n\t\t\tthis.identity = null;\r\n\t\t}\r\n\r\n\t\treturn this.identity;\r\n\t}\r\n\r\n\tgetToken(){\r\n\t\tlet token = localStorage.getItem('token');\r\n\r\n\t\tif(token != \"undefined\"){\r\n\t\t\tthis.token = token;\r\n\t\t}else{\r\n\t\t\tthis.token = null;\r\n\t\t}\r\n\t\treturn this.token;\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}